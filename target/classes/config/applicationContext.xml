<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xmlns:mvc="http://www.springframework.org/schema/mvc"
			xmlns:p="http://www.springframework.org/schema/p"
			xmlns:context="http://www.springframework.org/schema/context"
			xmlns:aop="http://www.springframework.org/schema/aop"
			xmlns:tx="http://www.springframework.org/schema/tx"
			xsi:schemaLocation="http://www.springframework.org/schema/beans
				http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/context
				http://www.springframework.org/schema/context/spring-context.xsd
				http://www.springframework.org/schema/aop
				http://www.springframework.org/schema/aop/spring-aop.xsd
				http://www.springframework.org/schema/tx
				http://www.springframework.org/schema/tx/spring-tx.xsd
				http://www.springframework.org/schema/mvc
				http://www.springframework.org/schema/mvc/spring-mvc.xsd">

  <!-- 开启注解扫描,希望处理service和dao, controller不需要 spring去处理 -->
  <context:component-scan base-package="im.design">
    <!-- 配置哪些注解不扫描 -->
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
  </context:component-scan>

  <!-- Spring整合Mybatis对象, 有了这个就可以不用 mybatis注解了 ======================================= -->
  <!-- 1.配置数据库相关参数properties的属性：${url} -->
  <context:property-placeholder location="classpath:config/jdbc.properties" />
  
  <!-- 2.数据库连接池 -->
  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
    <!-- 配置连接池属性 -->
    <property name="driverClass" value="${jdbc.driver}" />
    <property name="jdbcUrl" value="${jdbc.url}" />
    <property name="user" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
    
    <!-- c3p0连接池的私有属性 -->
    <property name="maxPoolSize" value="10" />
    <property name="minPoolSize" value="2" />
    <!-- 关闭连接后不自动commit -->
    <property name="autoCommitOnClose" value="false" />
    <!-- 获取连接超时时间 -->
    <property name="checkoutTimeout" value="10000" />
    <!-- 当获取连接失败重试次数 -->
    <property name="acquireRetryAttempts" value="2" />
  </bean>
	
  <!-- 3.配置SqlSessionFactory对象 -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <!-- 注入数据库连接池 -->
    <property name="dataSource" ref="dataSource" />
    <!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
    <property name="configLocation" value="classpath:config/mybatis-config.xml" />
    <!-- 扫描entity包 使用别名 -->
    <property name="typeAliasesPackage" value="im.design.entity" />
    <!-- 扫描sql配置文件:mapper需要的xml文件 -->
    <property name="mapperLocations" value="classpath:mapper/*Mapper.xml" />
  </bean>
  
  <!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
  <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <!-- 注入sqlSessionFactory -->
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    <!-- 给出需要扫描Dao接口包 -->
    <property name="basePackage" value="im.design.mapper" />
  </bean>
  <!-- ====================================================================================== -->

  <!-- 配置Spring框架声明式事物管理 -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <!-- 注入数据库连接池 -->
    <property name="dataSource" ref="dataSource" />
  </bean>

  <!-- 配置事物通知 -->
  <tx:annotation-driven transaction-manager="transactionManager" />
  <!-- <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      find方法打头的
      <tx:method name="find*" read-only="true" />
      <tx:method name="*" isolation="DEFAULT" />
    </tx:attributes>
  </tx:advice> -->

  <!-- 配置 AOP增强 -->
  <!-- <aop:config>
    <aop:advisor advice-ref="txAdvice" pointcut="execution( * cn.gorit.service.impl.*ServiceImpl.*(..))"></aop:advisor>
  </aop:config> -->
</beans>
